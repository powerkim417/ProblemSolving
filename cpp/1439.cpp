#include <iostream>

using namespace std;

int min(int a, int b){
    return (a>b)?b:a;
}

// 뒤집음의 범위에 0,1이 모두 껴있는 경우는 사실상 제자리걸음이므로 뒤집을 때는 같은 숫자 덩어리끼리만 뒤집는다고 생각
// 0011111001011 => 010101 로 간소화해도 무방
// 즉, 10101에서 11101으로 가든 10001로 가든 둘다 101이 되는 셈. 10101에서는 중간 문자만 고른다고 하면 어떻게 가도 101이 된다

// 총 4가지 경우
// 0...1 또는 1...0: 0덩어리와 1덩어리의 등장 갯수가 같음. 둘 중 어느 그 갯수가 답
// 0...0 또는 1...1: 두 덩어리의 등장 횟수가 1만큼 차이나는데, 그 중 더 작은 숫자가 답

int main(void){
    string s; cin>>s;
    int n = s.size();
    int cnt[2] = {};
    cnt[s[0]-'0']++;
    for (int i=1 ; i<=n ; i++){
        if (i==n || s[i]!=s[i-1]){ // s[i-1]에 해당하는 덩어리 카운트 추가
            cnt[s[i-1]-'0']++;
        }
    }
    cout<<min(cnt[0], cnt[1]);
    return 0;
}